<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <!-- namespace의 이름은 본인이 설정하면 된다. -->
<mapper namespace="com.example.goods.goodsDao"> 
	<resultMap type="com.example.domain.tradeGoodsDomain" id="tradeGoodsDomain">
		<result property="goodsNo" column="goodsNo" />
		<result property="dealNumber" column="dealNumber" />
		<result property="classification" column="classification" />
		<result property="amount" column="amount" />
		<result property="totalprice" column="totalprice" />
		<result property="date" column="date" />
		<result property="cusName" column="cusName" />
	</resultMap>

	<resultMap type="com.example.domain.GoodsDomain" id="GoodsDomain">
		<result property="goodsNo" column="goodsNo" />
		<result property="goodsName" column="goodsName" />
		<result property="goodsPrice" column="goodsPrice" />
		<result property="goodsColor" column="goodsColor" />
		<result property="brandName" column="brandName" />
		<result property="size" column="size" />
		<result property="manufacturer" column="manufacturer" />
		<result property="totalAmount" column="totalAmount" />
		
		<result property="dealNumber" column="dealNumber" />
		<result property="classification" column="classification" />
		<result property="amount" column="amount" />
		<result property="totalprice" column="totalprice" />
		<result property="date" column="date" />
		<result property="cusName" column="cusName" />	
		
		<collection property="goodsDomain" javaType="java.util.ArrayList" resultMap="tradeGoodsDomain" />
	</resultMap>


	<select id="tradeList" parameterType="com.example.domain.GoodsDomain" resultMap="GoodsDomain">
		select
			tg.dealNumber, tg.classification, tg.goodsNo, g.goodsName, g.size, g.goodsPrice,
			tg.amount, tg.totalprice, g.goodsColor, g.brandName, g.manufacturer, tg.date	 
		FROM
			tradegoods tg
		left join
			goods g
		on
			tg.goodsNo = g.goodsNo
		order by
			tg.dealNumber
	</select> 
	
 <!-- 물품 목록-->
 <select id="goodsList" parameterType="com.example.domain.GoodsDomain" resultType="com.example.domain.GoodsDomain">
   select
    goodsNo,goodsName,goodsColor,manufacturer,brandName,goodsPrice,size,totalAmount
  from
     goods
  where 1 = 1
  <if test='searchWord != null  and( searchType eq "GoodsNo".toString())'>
	 and goodsNo = #{searchWord}
  </if>
  <if test='searchWord != null  and( searchType eq "GoodsName".toString())'>
	and GoodsName = #{searchWord}
  </if>
 </select>
 
 
 <!-- 물품 등록 -->
 <insert id="goodsRegister" parameterType="com.example.domain.GoodsDomain">
 insert into goods(goodsNo,goodsName,goodsColor,manufacturer,brandName,goodsPrice,size,totalAmount)
       values(#{goodsNo},#{goodsName},#{goodsColor},#{manufacturer},#{brandName},#{goodsPrice},#{size},#{totalAmount})
 </insert>
 
 
 <!-- 물품 수정 -->
 <update id="goodsModify" parameterType="com.example.domain.GoodsDomain">
 UPDATE goods
	SET
	goodsName = #{goodsName},
	goodsColor = #{goodsColor},
	manufacturer = #{manufacturer},
	goodsPrice = #{goodsPrice},
	size = #{size},
	totalAmount = #{totalAmount}
	WHERE goodsNo = #{goodsNo}
 </update>
 
 
 <!-- 물품 삭제 -->
 <delete id="goodsDelete" parameterType="String">
 delete 
    from
       goods
 where
       goodsNo=#{goodsNo}
 </delete>
 

<!-- 해당물품번호의  물품명,색상,사이즈구하기-->
<select id="goodsInfoIdx" parameterType="String" resultType="com.example.domain.GoodsDomain">
select
   goodsNo,goodsName,goodsColor,manufacturer,brandName,goodsPrice,size,totalAmount
 from
   goods
where
   goodsNo=#{goodsNo}

</select>
<!-- 해당물품번호의  물품명,색상,사이즈구하기-->
<select id="goodsNoImfo" parameterType="String" resultType="com.example.domain.GoodsDomain">
select
   goodsName,goodsColor,size
from
   goods
where
   goodsNo=#{goodsNo}

</select>
 <!-- totalAmount 수정 -->
 <update id="totalAmountUpdate" parameterType="com.example.domain.GoodsDomain">
 UPDATE goods
	SET
	totalAmount = #{totalAmount}
	WHERE goodsNo = #{goodsNo}
 </update>

</mapper>

